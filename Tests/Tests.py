
from ..timeClasses import TimeSpan, PeriodType
from ..timeParser import TimeParser
import datetime
import pytest


now = datetime.datetime.now()


date_tests = {
    # date time formats
    "January 5" : TimeSpan(None, 1, 5).infer(now),
    "dec 25" : TimeSpan(None, 12, 25).infer(now),
    "may 27th" : TimeSpan(None, 5, 27).infer(now),
    "October 2006" : TimeSpan(2006, 10),
    "jan 3 2010" : TimeSpan(2010, 1, 3),
    "March 14, 2004" : TimeSpan(2004, 3, 14),
    "March 14th, 2004" : TimeSpan(2004, 3, 14),
    "3 jan 2000" : TimeSpan(2000, 1, 3),
    "17 april 85" : TimeSpan(1985, 4, 17),
    "5/27/1979" : TimeSpan(1979, 5, 27),
    "27/5/1979" : TimeSpan(1979, 5, 27),
    "1979-05-27" : TimeSpan(1979, 5, 27),
    "Friday" : TimeSpan().infer(now).next_wd('friday'),
    "5" : None,
    "4:00" : TimeSpan(None, None, None, 4).infer(now),
    "17:00" : TimeSpan(None, None, None, 17).infer(now),
    "0800"  : TimeSpan(None, None, None, None, 8).infer(now),
    "10:30" : TimeSpan(None, None, None, 10, 30).infer(now),
    "10:30:15" : TimeSpan(None, None, None, 10, 30, 15).infer(now),
    "10:30:15.123" : TimeSpan(None, None, None, 10, 30, 15).infer(now), # currently just ignore the milliseconds
    "10:30:15.123456": TimeSpan(None, None, None, 10, 30, 15).infer(now),
    "9/4/2000" : TimeSpan(2000, 9, 4),
    "9/4/2000 10:30" : TimeSpan(2000, 9, 4, 10, 30),
    "9/4/2000 10:30:15" : TimeSpan(2000, 9, 4, 10, 30, 15),
    "9 Apr 2000" : TimeSpan(2000, 4, 9),
    "9 Apr 2000 10:30" : TimeSpan(2000, 4, 9, 10, 30),
    "9 April 2000 10:30:15" : TimeSpan(2000, 4, 9, 10, 30, 15),
    "9-4-2000" : TimeSpan(2000, 9, 4),
    "9-4-2000 10:30pm" : TimeSpan(2000, 9, 4, 22, 30),
    "9-4-2000 22:30:15pm" : TimeSpan(2000, 9, 4, 22, 30, 15),
    # year tests
    "1984" : TimeSpan(1984),
    "spring of 1982" : TimeSpan(1982, 3, 20).set_end(1982, 6, 20),
    "the third quarter of '63" : TimeSpan(1963, 7, 1).set_end(1963, 10, 1),
    "the first part of the 19th century" : TimeSpan(1800, 1, 1).set_end(1810, 1, 1),
    "the turn of the century" : TimeSpan(2000, 1, 1).set_end(2001, 1, 1),
    "the close of the previous decade" : TimeSpan(1910, 1, 1).set_end(1920, 1, 1),
    #"four score and seven years ago", 
    "10,000BC" : TimeSpan(-10000),
    "the eighteenth century" : TimeSpan(1800, 1, 1).set_end(1900, 1, 1),
    "the twentyfirst century" : TimeSpan(2000, 1, 1).set_end(2100, 1, 1),
    "the twenty-first century" : TimeSpan(2000, 1, 1).set_end(2100, 1, 1),
    "the twenty first century" : TimeSpan(2000, 1, 1).set_end(2100, 1, 1),
    "(1957)" : TimeSpan(1957),
    "47 BCE" : TimeSpan(-47), 
    "2CE" : TimeSpan(2), 
    "1908AD" : TimeSpan(1908), 
    "190 AD" : TimeSpan(190), 
    "at the start of 1950" : TimeSpan(1950, 1),
    "the close of the 70's" : TimeSpan(1978).set_end(1980),
    "the year 204" : TimeSpan(204), 
    "summer of '89" : TimeSpan(1989, 6, 21).set_end(1989, 9, 21),
    "the fall of 2000" : TimeSpan(2000, 9, 1).set_end(2000, 12, 1),
    "spring 1420" : TimeSpan(1420, 3, 20).set_end(1420, 6, 20),
    "in the 70's" : TimeSpan(1970).set_end(1980), 
    "three months into 1987" : TimeSpan(1987, 3),
    "the 19th century" : TimeSpan(1800).set_end(1900), 
    "latter half of last year" : TimeSpan(None, 7).infer(now).offset_period(PeriodType.YEAR, -1).offset_period(PeriodType.MONTH, 6, 'end'),
    "last year" : TimeSpan().infer(now, grain=PeriodType.YEAR).offset_period(PeriodType.YEAR, -1), 
    "ten years ago" : TimeSpan().infer(now, grain=PeriodType.YEAR).offset_period(PeriodType.YEAR, -10),
    "a decade before today" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.YEAR, -10),
    "one million years ago" : TimeSpan().infer(now).offset_period(PeriodType.YEAR, -1000000), 
    "a million years ago plus or minus 10,000 years" : TimeSpan().infer(now).offset_period(PeriodType.YEAR, -1001000, 'start').offset_period(PeriodType.YEAR, -999000, 'end'),
    "one million years in the past +/- 10000 years": TimeSpan().infer(now).offset_period(PeriodType.YEAR, -1000000).offset_period(PeriodType.YEAR, -10000, 'start').offset_period(PeriodType.YEAR, 10000, 'end'), 
    "between 5000 and 10000 years ago": TimeSpan().infer(now).offset_period(PeriodType.YEAR, -10000, 'start').offset_period(PeriodType.YEAR, -5000, 'end'),
    "the year of our lord 2050" : TimeSpan(2050),
    "circa 1080" : TimeSpan(1080),
    # month tests
    "next quarter" : TimeSpan(None, now.month - (now.month % 3)).infer(now).offset_period(PeriodType.MONTH, 3, edge='both').offset_period(PeriodType.MONTH, 3, edge='end'),
    "april next year" : TimeSpan(None, 4).infer(now).offset_period(PeriodType.YEAR, 1),
    "march 1974" : TimeSpan(1974, 3),
    "march just gone": TimeSpan(None, 3).infer(now) if now.month > 3 else TimeSpan(None, 3).infer(now).offset_period(PeriodType.YEAR, -1), 
    "end of last month" : TimeSpan(None, 3).infer(now),
    "last month" : TimeSpan().infer(now, grain=PeriodType.MONTH).offset_period(PeriodType.MONTH, -1),
    "first half of June":  TimeSpan(None, 6).infer(now).offset_period(PeriodType.DAY, 15, edge='end'),
    "the start of the second week in August": TimeSpan(None, 8).infer(now).next_wd('friday').offset_period(PeriodType.DAY, 1, edge='both').offset_period(PeriodType.DAY, 2, edge='end'),
    "between July and August next year" : TimeSpan(None, 6).infer(now).offset_period(PeriodType.YEAR, 1).offset_period(PeriodType.MONTH, 1, edge='end'),
    "mid June - mid October" : TimeSpan(None, 6, 15).infer(now).offset_period(PeriodType.MONTH, 6, 'end'),
    "the middle of next month" : TimeSpan().infer(now, grain=PeriodType.MONTH).offset_period(PeriodType.MONTH, 1).offset_period(PeriodType.DAY, 15, 'both'),
    "the middle of this month" : TimeSpan().infer(now, grain=PeriodType.MONTH).offset_period(PeriodType.DAY, 15, 'both'),
    "the week after christmas" : TimeSpan(None, 12, 25).infer(now).next_wd('sunday').offset_period(PeriodType.DAY, 7, 'end'),
    "over the next two weeks" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, 14, 'end'),
    # week tests
    "monday next week" : TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('monday'),
    "next tues" : TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('tuesday'),
    "first monday next april" : TimeSpan(None, 4).infer(now).next_wd('monday') if now.month < 4 else TimeSpan(None, 4).infer(now).next_wd('monday').offset_period(PeriodType.YEAR, 1),
    "sunday" : TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('sunday'),
    "sunday two weeks from now" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, 14, 'end').next_wd('sunday'),
    "after a fortnight" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, 14),
    "later half of next week" : TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('sunday').next_wd('wednesday').offset_period(PeriodType.DAY, 4),
    "in five to ten business days" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, 5, 'both').offset_period(PeriodType.DAY, 5, 'end'),
    "next weekend" : TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('saturday').offset_period(PeriodType.DAY, 2, 'end'),
    "this weekend" : TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('saturday').offset_period(PeriodType.DAY, 2, 'end'),
    "after the 15th" : TimeSpan(None, None, 15).infer(now),
    "before the 7th of next month" : TimeSpan().infer(now, grain=PeriodType.DAY).set_end(None, None, 7).offset_period(PeriodType.MONTH, 1, 'end'),
    "we ran on Monday" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, 7).next_wd('monday'),
    "we run on Monday" : TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('monday'),
    "we are running Monday": TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('monday'),
    "we have a run on Monday": TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('monday'),
    "we have run, on Monday": TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, 7).next_wd('monday'),
    # time tests
    "midnight on the 9th of april" : TimeSpan(None, 4, 9, 0).infer(now),
    "5pm on the 9th of april" : TimeSpan(None, 4, 9, 17).infer(now),
    "two hours after noon" : TimeSpan(None, None, None, 14).infer(now),
    "thursday": TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('thursday'),
    "november" : TimeSpan(None, 11).infer(now),
    "friday 13:00" : TimeSpan(None, None, None, 13, 0).infer(now).next_wd('friday'),
    "mon 2:35" : TimeSpan(None, None, None, 2, 35).infer(now).next_wd('monday'),
    "4pm" : TimeSpan(None, None, None, 16).infer(now),
    "6 in the morning" : TimeSpan(None, None, None, 6).infer(now),
    "friday 1pm" : TimeSpan(None, None, None, 13).infer(now).next_wd('friday'),
    "sat 7 in the evening" : TimeSpan(None, None, None, 19).infer(now).next_wd('saturday'),
    "yesterday" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, -1),
    "today" : TimeSpan().infer(now, grain=PeriodType.DAY),
    "tomorrow" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, 1),
    "this tuesday" : TimeSpan().infer(now, grain=PeriodType.DAY).next_wd('tuesday'),
    "next month" : TimeSpan().infer(now, grain=PeriodType.MONTH).offset_period(PeriodType.MONTH, 1),
    "this morning" : TimeSpan(None, None, None, 0).infer(now).offset_period(PeriodType.HOUR, 12, edge='end'),
    "last night" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.HOUR, -12, edge='start'),
    "this second" : TimeSpan().infer(now, grain=PeriodType.SECOND),
    "yesterday at 4:00" : TimeSpan(None, None, None, 4, 0).infer(now).offset_period(PeriodType.DAY, -1),
    "last friday at 20:00" : TimeSpan(None, None, None, 20, 0).infer(now).offset_period(PeriodType.DAY, -7).next_wd('friday'),
    "last week tuesday" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, -7).next_wd('tuesday'),
    "tomorrow at 6:45pm" : TimeSpan(None, None, None, 18, 45).infer(now).offset_period(PeriodType.DAY, 1),
    "afternoon yesterday" : TimeSpan(None, None, None, None, 0).infer(now).offset_period(PeriodType.HOUR, -12, edge='start'),
    "thursday last week" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, -7).next_wd('thursday'),
    "3 years ago" : TimeSpan().infer(now, grain=PeriodType.YEAR).offset_period(PeriodType.YEAR, -3),
    "5 months before now" : TimeSpan().infer(now, grain=PeriodType.MONTH).offset_period(PeriodType.MONTH, -5),
    "7 hours ago" : TimeSpan().infer(now, grain=PeriodType.HOUR).offset_period(PeriodType.HOUR, -7),
    "7 days from now" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, 7),
    "1 week hence" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, 7),
    "in 3 hours" : TimeSpan().infer(now, grain=PeriodType.HOUR).offset_period(PeriodType.HOUR, 3),
    "1 year ago tomorrow" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.YEAR, -1),
    "3 months ago saturday at 5:00 pm" : TimeSpan(None, None, None, 17, 0).infer(now).offset_period(PeriodType.MONTH, -3).next_wd('saturday'),
    "7 hours before tomorrow at noon" : TimeSpan(None, None, None, 5, 0).infer(now).offset_period(PeriodType.DAY, 1),
    "3rd wednesday in november": TimeSpan(None, 11).infer(now).next_wd('wednesday').next_wd('wednesday').next_wd('wednesday'),
    "3rd month next year" : TimeSpan(None, 3).infer(now).offset_period(PeriodType.YEAR, 1),
    "3rd thursday this september" : TimeSpan(None, 9).infer(now).next_wd('thursday').next_wd('thursday').next_wd('thursday'),
    "4th day last week" : TimeSpan().infer(now, grain=PeriodType.DAY).offset_period(PeriodType.DAY, -7).next_wd('tursday'),
    "2300 hrs" : TimeSpan(None, None, None, 23).infer(now)
}



if __name__ == "__main__" :
    timeparser = TimeParser()
    for  test in date_tests.keys:
        testTime = timeparser.parse(test)
        if testTime != date_tests[test]:
            print("Error: " + test + " " + str(testTime) + " " + str(date_tests[test]))
        
        

